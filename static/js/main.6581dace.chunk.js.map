{"version":3,"sources":["components/Code.tsx","components/ContentH4.tsx","components/HashLink.tsx","components/NavLink.tsx","components/Header.tsx","components/MainWrapper.tsx","pages/home.tsx","App.tsx","index.tsx"],"names":["Code","code","lang","customStyle","width","marginLeft","fontSize","language","style","theme","H4Text","text","HashLink","link","a","includes","replaceAll","toLowerCase","className","id","href","NavLinkComponent","props","Nav","Item","isBlank","Link","target","name","activeClassName","to","Header","variant","activeKey","MainWrapper","Container","children","HomePage","margin","App","path","render","ReactDOM","document","getElementById"],"mappings":"iNASaA,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACnC,cAAC,IAAD,CACEC,YAAa,CAAEC,MAAO,MAAOC,WAAY,GAAIC,SAAU,IACvDC,SAAUL,EACVM,MAAOC,IAHT,SAKGR,KCXQS,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrC,oBAAIH,MAAO,CAAEH,WAAY,IAAzB,SAAgCM,KCCrBC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpCC,EAAC,eACLD,EAAKE,SAAS,KACVF,EAAKG,WAAW,IAAK,KAAKC,cAC1BJ,EAAKI,eAEX,OACE,qBAAIC,UAAU,OAAd,UACE,mBAAGC,GAAIL,IACP,mBAAGM,KAAI,WAAMN,GAAb,eAFF,IAE2BD,M,kBCLlBQ,EAAoC,SAACC,GAAD,OAC/C,mCACE,cAACC,EAAA,EAAIC,KAAL,UACGF,EAAMG,QACL,cAACF,EAAA,EAAIG,KAAL,CAAUR,UAAU,OAAOS,OAAO,SAASP,KAAME,EAAMF,KAAvD,SACE,6BAAKE,EAAMM,SAGb,cAAC,IAAD,CACEV,UAAU,gBACVW,gBAAgB,SAChBC,GAAIR,EAAMF,KAHZ,SAKE,6BAAKE,EAAMM,cCpBRG,EAAS,kBACpB,qCACE,qBAAKb,UAAU,6CAAf,SACE,mDAEF,eAACK,EAAA,EAAD,CAAKS,QAAQ,OAAOd,UAAU,yBAAyBe,UAAU,QAAjE,UACE,cAAC,EAAD,CAAkBb,KAAK,QAAQQ,KAAK,OAAOH,SAAS,IACpD,qBAAKP,UAAU,SACf,cAAC,EAAD,CACEE,KAAK,iDACLQ,KAAK,SACLH,SAAS,IAEX,cAAC,EAAD,CACEL,KAAK,iCACLQ,KAAK,SACLH,SAAS,IAEX,cAAC,EAAD,CACEL,KAAK,0CACLQ,KAAK,SACLH,SAAS,WChBJS,EAA+B,SAACZ,GAC3C,OACE,qBAAKJ,UAAU,0BAAf,SACE,eAACiB,EAAA,EAAD,WACE,cAAC,EAAD,IACCb,EAAMc,eCsGAC,EA7GY,WACzB,OACE,cAAC,EAAD,UACE,sBAAKnB,UAAU,0BAAf,UACE,oBAAIA,UAAU,mBAAd,yGAIA,sBAAKV,MAAO,CAAEJ,MAAO,MAAOkC,OAAQ,UAApC,UACE,cAAC,EAAD,CAAUzB,KAAK,eACf,cAAC,EAAD,CAAQF,KAAK,qCACb,cAAC,EAAD,CAAMT,KAAK,OAAOD,KAAI,gCACtB,cAAC,EAAD,CAAQU,KAAK,aACb,cAAC,EAAD,CAAMT,KAAK,OAAOD,KAAI,6BACtB,cAAC,EAAD,CAAUY,KAAK,kBACf,cAAC,EAAD,CACEF,KAAK,8FAGP,cAAC,EAAD,CAAQA,KAAK,6BACb,cAAC,EAAD,CACET,KAAK,MACLD,KAAI,sbAmBN,cAAC,EAAD,CAAUY,KAAK,oBACf,cAAC,EAAD,CAAQF,KAAK,0DACb,cAAC,EAAD,CAAQA,KAAK,8BACb,cAAC,EAAD,CACET,KAAK,MACLD,KAAI,wtBA0BN,cAAC,EAAD,CAAUY,KAAK,kCACf,cAAC,EAAD,CAAQF,KAAK,iEACb,cAAC,EAAD,CAAQA,KAAK,aACb,cAAC,EAAD,CACET,KAAK,MACLD,KAAI,yvBCnEDsC,EAXO,WACpB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,OAAQ,kBAAM,cAAC,EAAD,OAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBAAM,cAAC,IAAD,CAAUX,GAAG,mBCLnDY,IAASD,OAAO,cAAC,EAAD,IAASE,SAASC,eAAe,U","file":"static/js/main.6581dace.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { darcula as theme } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\ntype Props = {\r\n  code: string;\r\n  lang: string;\r\n};\r\n\r\nexport const Code: React.FC<Props> = ({ code, lang }) => (\r\n  <SyntaxHighlighter\r\n    customStyle={{ width: \"75%\", marginLeft: 50, fontSize: 16 }}\r\n    language={lang}\r\n    style={theme}\r\n  >\r\n    {code}\r\n  </SyntaxHighlighter>\r\n);\r\n","import React from \"react\";\r\n\r\ntype Props = { text: string };\r\n\r\nexport const H4Text: React.FC<Props> = ({ text }) => (\r\n  <h4 style={{ marginLeft: 30 }}>{text}</h4>\r\n);\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  link: string;\r\n};\r\n\r\nexport const HashLink: React.FC<Props> = ({ link }) => {\r\n  const a = `home/${\r\n    link.includes(\" \")\r\n      ? link.replaceAll(\" \", \"-\").toLowerCase()\r\n      : link.toLowerCase()\r\n  }`;\r\n  return (\r\n    <h3 className=\"my-3\">\r\n      <a id={a}></a>\r\n      <a href={`#${a}`}>#</a> {link}\r\n    </h3>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  href: string;\r\n  name: string;\r\n  isBlank: boolean;\r\n};\r\n\r\nexport const NavLinkComponent: React.FC<Props> = (props: Props) => (\r\n  <>\r\n    <Nav.Item>\r\n      {props.isBlank ? (\r\n        <Nav.Link className=\"mx-2\" target=\"_blank\" href={props.href}>\r\n          <h4>{props.name}</h4>\r\n        </Nav.Link>\r\n      ) : (\r\n        <NavLink\r\n          className=\"nav-link mx-2\"\r\n          activeClassName=\"active\"\r\n          to={props.href}\r\n        >\r\n          <h4>{props.name}</h4>\r\n        </NavLink>\r\n      )}\r\n    </Nav.Item>\r\n  </>\r\n);\r\n","import { Nav } from \"react-bootstrap\";\r\nimport { NavLinkComponent } from \"./NavLink\";\r\n\r\nexport const Header = () => (\r\n  <>\r\n    <div className=\"d-flex flex-column align-items-center py-4\">\r\n      <h1>Nest JWT Module</h1>\r\n    </div>\r\n    <Nav variant=\"tabs\" className=\"justify-content-center\" activeKey=\"/home\">\r\n      <NavLinkComponent href=\"/home\" name=\"Home\" isBlank={false} />\r\n      <div className=\"mx-4\"></div>\r\n      <NavLinkComponent\r\n        href=\"https://github.com/senior-vova/nest-jwt-module\"\r\n        name=\"Github\"\r\n        isBlank={true}\r\n      />\r\n      <NavLinkComponent\r\n        href=\"https://github.com/senior-vova\"\r\n        name=\"Author\"\r\n        isBlank={true}\r\n      />\r\n      <NavLinkComponent\r\n        href=\"https://www.donationalerts.com/r/ags_it\"\r\n        name=\"Donate\"\r\n        isBlank={true}\r\n      />\r\n    </Nav>\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Header } from \"./Header\";\r\n\r\ntype Props = {\r\n  children: any;\r\n};\r\n\r\nexport const MainWrapper: React.FC<Props> = (props: Props) => {\r\n  return (\r\n    <div className=\"bg-dark text-light pb-5\">\r\n      <Container>\r\n        <Header />\r\n        {props.children}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Code } from \"../components/Code\";\r\nimport { H4Text } from \"../components/ContentH4\";\r\nimport { HashLink } from \"../components/HashLink\";\r\nimport { MainWrapper } from \"../components/MainWrapper\";\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <MainWrapper>\r\n      <div className=\"mt-3 d-flex flex-column\">\r\n        <h2 className=\"text-center my-3\">\r\n          This library created for easy using JWT system. Module can use only in\r\n          NestJS applications.\r\n        </h2>\r\n        <div style={{ width: \"80%\", margin: \"0 auto\" }}>\r\n          <HashLink link=\"Installing\" />\r\n          <H4Text text=\"You can install module with npm:\" />\r\n          <Code lang=\"bash\" code={`npm install nest-jwt-module`} />\r\n          <H4Text text=\"or yarn:\" />\r\n          <Code lang=\"bash\" code={`yarn add nest-jwt-module`} />\r\n          <HashLink link=\"Import module\" />\r\n          <H4Text\r\n            text=\"Before using you need to connect JWTModule in module imports where\r\n            you want to use JWT.\"\r\n          />\r\n          <H4Text text=\"Example: (app.module.ts)\" />\r\n          <Code\r\n            lang=\"tsx\"\r\n            code={`import { Module } from \"@nestjs/common\";\r\nimport { AppController } from \"./app.controller\";\r\nimport { AppService } from \"./app.service\";\r\nimport { JWTModule } from \"nest-jwt-module\";\r\n\r\n@Module({\r\n  imports: [\r\n    ...,\r\n    JWTModule.forRoot({\r\n    secretKey: \"your-secret-key\",\r\n    expiresIn: \"time\", // ex: \"12h\"\r\n    }),\r\n    ...,\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}`}\r\n          />\r\n          <HashLink link=\"Use JWT service\" />\r\n          <H4Text text=\"When jwt-module is connected you can use jwt-service.\" />\r\n          <H4Text text=\"Example: (app.service.ts)\" />\r\n          <Code\r\n            lang=\"tsx\"\r\n            code={`import { Injectable } from \"@nestjs/common\";\r\nimport { JWTService } from \"nest-jwt-module\";\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  constructor(\r\n    private readonly jwtService: JWTService\r\n  ) {}\r\n\r\n  async login(body: { email: string, pass: string }): Promise<any> {\r\n    try {\r\n      const user = await userModel.findOne(\r\n        { email: body.email, pass: body.pass }\r\n      ); // this using MongoDB\r\n      if (user) {\r\n        const jwt = await this.jwtService.GenerateToken({ id: user._id });\r\n        return Promise.resolve({ user, jwt });\r\n      } else {\r\n        return Promise.reject({ error: \"User is not found\" });\r\n      }\r\n    } catch (error) {\r\n      return Promise.reject({ error });\r\n    }\r\n  }\r\n}`}\r\n          />\r\n          <HashLink link=\"Use JWT service in Middleware\" />\r\n          <H4Text text=\"You can use jwt-service to verify bearer token from request.\" />\r\n          <H4Text text=\"Example:\" />\r\n          <Code\r\n            lang=\"tsx\"\r\n            code={`import { Injectable, NestMiddleware } from \"@nestjs/common\";\r\nimport { Response } from \"express\";\r\nimport { JWTService } from \"nest-jwt-module\";\r\n\r\n@Injectable()\r\nexport class AuthMiddleware implements NestMiddleware {\r\n  constructor(private jwtService: JWTService) {}\r\n\r\n  async use(req: any, res: Response, next: Function) {\r\n    const token = req.headers[\"Authorization\"] || req.headers[\"authorization\"];\r\n    if (token) {\r\n      try {\r\n        const data = await this.jwtService.Verify(\r\n          (token as string).replace(\"Bearer \", \"\")\r\n        );\r\n        if (data) {\r\n          req.user = data.data;\r\n        }\r\n      } catch (error) {\r\n        return res.status(500).json({ error: \"Invalid token\" });\r\n      }\r\n    }\r\n    next();\r\n  }\r\n}`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </MainWrapper>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { HashRouter, Redirect } from \"react-router-dom\";\r\nimport HomePage from \"./pages/home\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/home\" render={() => <HomePage />} />\r\n        <Route path=\"/\" render={() => <Redirect to=\"/home\" />} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.sass\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}