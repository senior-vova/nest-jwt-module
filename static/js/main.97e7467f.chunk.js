(this["webpackJsonpnest-jwt-module"]=this["webpackJsonpnest-jwt-module"]||[]).push([[0],{340:function(e,t,n){"use strict";n.r(t);var r=n(51),s=n.n(r),c=(n(62),n(63),n(0),n(3)),o=n(18),i=n(346),a=n(343),l=n(1),j=function(e){var t=e.code,n=e.lang;return Object(l.jsx)(i.a,{customStyle:{width:"75%",marginLeft:50,fontSize:16},language:n,style:a.a,children:t})},m=function(e){var t=e.text;return Object(l.jsx)("h4",{style:{marginLeft:30},children:t})},d=function(e){var t=e.link;return Object(l.jsxs)("h3",{className:"my-3",children:[Object(l.jsx)("a",{href:"#home/".concat(t.includes(" ")?t.replaceAll(" ","-").toLowerCase():t.toLowerCase()),children:"#"})," ",t]})},u=n(344),x=n(345),h=function(e){return Object(l.jsx)(l.Fragment,{children:Object(l.jsx)(x.a.Item,{children:e.isBlank?Object(l.jsx)(x.a.Link,{className:"mx-2",target:"_blank",href:e.href,children:Object(l.jsx)("h4",{children:e.name})}):Object(l.jsx)(o.b,{className:"nav-link mx-2",activeClassName:"active",to:e.href,children:Object(l.jsx)("h4",{children:e.name})})})})},b=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"d-flex flex-column align-items-center py-4",children:Object(l.jsx)("h1",{children:"Nest JWT Module"})}),Object(l.jsxs)(x.a,{variant:"tabs",className:"justify-content-center",activeKey:"/home",children:[Object(l.jsx)(h,{href:"/home",name:"Home",isBlank:!1}),Object(l.jsx)("div",{className:"mx-4"}),Object(l.jsx)(h,{href:"https://github.com/senior-vova/nest-jwt-module",name:"Github",isBlank:!0}),Object(l.jsx)(h,{href:"https://github.com/senior-vova",name:"Author",isBlank:!0}),Object(l.jsx)(h,{href:"https://www.donationalerts.com/r/ags_it",name:"Donate",isBlank:!0})]})]})},p=function(e){return Object(l.jsx)("div",{className:"bg-dark text-light pb-5",children:Object(l.jsxs)(u.a,{children:[Object(l.jsx)(b,{}),e.children]})})},O=function(){return Object(l.jsx)(p,{children:Object(l.jsxs)("div",{className:"mt-3 d-flex flex-column",children:[Object(l.jsx)("h2",{className:"text-center my-3",children:"This library created for easy using JWT system. Module can use only in NestJS applications."}),Object(l.jsxs)("div",{style:{width:"80%",margin:"0 auto"},children:[Object(l.jsx)(d,{link:"Installing"}),Object(l.jsx)(m,{text:"You can install module with npm:"}),Object(l.jsx)(j,{lang:"bash",code:"npm install nest-jwt-module"}),Object(l.jsx)(m,{text:"or yarn:"}),Object(l.jsx)(j,{lang:"bash",code:"yarn add nest-jwt-module"}),Object(l.jsx)(d,{link:"Import module"}),Object(l.jsx)(m,{text:"Before using you need to connect JWTModule in module imports where\r you want to use JWT."}),Object(l.jsx)(m,{text:"Example: (app.module.ts)"}),Object(l.jsx)(j,{lang:"tsx",code:'import { Module } from "@nestjs/common";\nimport { AppController } from "./app.controller";\nimport { AppService } from "./app.service";\nimport { JWTModule } from "nest-jwt-module";\n\n@Module({\n  imports: [\n    ...,\n    JWTModule.forRoot({\n    secretKey: "your-secret-key",\n    expiresIn: "time", // ex: "12h"\n    }),\n    ...,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}'}),Object(l.jsx)(d,{link:"Use JWT service"}),Object(l.jsx)(m,{text:"When jwt-module is connected you can use jwt-service."}),Object(l.jsx)(m,{text:"Example: (app.service.ts)"}),Object(l.jsx)(j,{lang:"tsx",code:'import { Injectable } from "@nestjs/common";\nimport { JWTService } from "nest-jwt-module";\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private readonly jwtService: JWTService\n  ) {}\n\n  async login(body: { email: string, pass: string }): Promise<any> {\n    try {\n      const user = await userModel.findOne(\n        { email: body.email, pass: body.pass }\n      ); // this using MongoDB\n      if (user) {\n        const jwt = await this.jwtService.GenerateToken({ id: user._id });\n        return Promise.resolve({ user, jwt });\n      } else {\n        return Promise.reject({ error: "User is not found" });\n      }\n    } catch (error) {\n      return Promise.reject({ error });\n    }\n  }\n}'}),Object(l.jsx)(d,{link:"Use JWT service in Middleware"}),Object(l.jsx)(m,{text:"You can use jwt-service to verify bearer token from request."}),Object(l.jsx)(m,{text:"Example:"}),Object(l.jsx)(j,{lang:"tsx",code:'import { Injectable, NestMiddleware } from "@nestjs/common";\nimport { Response } from "express";\nimport { JWTService } from "nest-jwt-module";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private jwtService: JWTService) {}\n\n  async use(req: any, res: Response, next: Function) {\n    const token = req.headers["Authorization"] || req.headers["authorization"];\n    if (token) {\n      try {\n        const data = await this.jwtService.Verify(\n          (token as string).replace("Bearer ", "")\n        );\n        if (data) {\n          req.user = data.data;\n        }\n      } catch (error) {\n        return res.status(500).json({ error: "Invalid token" });\n      }\n    }\n    next();\n  }\n}'})]})]})})},f=function(){return Object(l.jsx)(o.a,{children:Object(l.jsxs)(c.d,{children:[Object(l.jsx)(c.b,{path:"/home",render:function(){return Object(l.jsx)(O,{})}}),Object(l.jsx)(c.b,{path:"/",render:function(){return Object(l.jsx)(c.a,{to:"/home"})}})]})})};s.a.render(Object(l.jsx)(f,{}),document.getElementById("root"))},63:function(e,t,n){}},[[340,1,2]]]);
//# sourceMappingURL=main.97e7467f.chunk.js.map